---
import Layout from '@components/layout/Layout.astro';
import PostList from '@components/posts/PostList.astro';
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
export const prerender = true;

import me from '../assets/me.png';

const allPosts = await getCollection('posts', ({ data }) => {
  return data.draft !== true;
});
const recentPosts = allPosts
  .sort((a, b) => {
    // @ts-ignore
    return new Date(b.data.pubDate) - new Date(a.data.pubDate);
  })
  .slice(0, 7);
---

<Layout title="Home" description="The home page of Mykal Machon!" type="home">
  <header class="container">
    <div class="image">
      <Image
        width="500"
        height="500"
        src={me}
        alt="Mykal Machon"
        format={'webp'}
      />
    </div>
    <div class="content">
      <h1>Mykal Machon</h1>
      <p>
        Welcome to my personal website! I share posts, notes, photos, and more
        here. Have fun exploring.
      </p>
    </div>
  </header>
  <main>
    <section>
      <h2>Latest post</h2>
      <div class="post-callout">
        <h3><strong>{recentPosts[0].data.title}</strong></h3>
        <p>
          <i
            >{recentPosts[0].data.type} - {
              recentPosts[0].data.pubDate.toDateString()
            }</i
          >
        </p>
        <p>{recentPosts[0].data.description}</p>
        <p><a href={`/posts/${recentPosts[0].slug}`}>Read more</a></p>
      </div>
    </section>
    <section>
      <h2>Other posts</h2>
      <p>
        I write about whatever I'm intersted in, which tends to include
        programming, web development, tech, and other nerdy stuff.
      </p>
      <PostList
        posts={recentPosts.slice(1, recentPosts.length)}
        showArchiveLink={true}
      />
    </section>
  </main>
</Layout>

<style>
  header {
    position: relative;
    display: grid;
    grid-template-columns: 1fr 2fr;
    align-items: center;
    gap: var(--size-6);
    border-bottom: 1px solid var(--paper-3);
    padding: calc(var(--size-3) + var(--size-2)) var(--size-3);
    z-index: 1;
    padding: var(--size-3);
  }

  header::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    width: 100%;
    z-index: -1;
    background-size: 345px 132.48px;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 345 132.48" width="345" height="132.48" style="opacity: 0.2; filter: grayscale(0.6);"><text x="0em" y="1em" font-size="46" transform="rotate(30 28.75 27.599999999999998)">‚òïÔ∏è</text><text x="1.5em" y="2.2em" font-size="46" transform="rotate(30 97.75 82.8)">ü•ê</text><text x="3em" y="1em" font-size="46" transform="rotate(30 166.75 27.599999999999998)">üë®‚Äçüíª</text><text x="4.5em" y="2.2em" font-size="46" transform="rotate(30 235.75 82.8)">‚å®Ô∏è</text><text x="6em" y="1em" font-size="46" transform="rotate(30 304.75 27.599999999999998)">üìñ</text></svg>');
  }

  header img {
    border-radius: var(--radius-2);
    border: 1px solid var(--accent-1);
    box-shadow:
      var(--shadow-2),
      0 1px 3px 0 var(--accent-2),
      0 1px 2px -1px var(--accent-4);
    aspect-ratio: 3/4;
    object-fit: cover;
    margin: 0px;
  }

  .post-callout {
    position: relative;
    border: 1px solid var(--paper-3);
    border-radius: var(--radius-2);
    display: flex;
    flex-direction: column;
    gap: var(--size-2);
    padding: var(--size-3);
    transition:
      border-color 0.2s ease-out,
      transform 0.3s var(--ease-out-3),
      box-shadow 0.2s ease-out;
  }

  .post-callout:hover,
  .post-callout:focus-within {
    border-color: var(--accent-1);
    transform: scale(1.02);
    box-shadow:
      var(--shadow-2),
      0 1px 3px 0 var(--accent-2),
      0 1px 2px -1px var(--accent-4);
  }

  .post-callout:hover a:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .post-callout > * {
    margin: 0;
  }

  @media screen and (max-width: 60ch) {
    header {
      padding: var(--size-5) var(--size-3);
      grid-template-columns: 1fr;
      gap: var(--size-3);
    }

    header h1 {
      margin-top: 0;
    }

    header img {
      max-width: 30vw;
      aspect-ratio: 3.5/4;
    }
  }

  ul {
    width: 100%;
    list-style: none;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    margin: 0;
    padding: 0;
  }

  ul li {
    display: inline-block;
  }

  ul li a {
    display: flex;
    align-items: center;
    justify-content: flex-start;
  }
</style>
