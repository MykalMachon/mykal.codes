---
import MainHead from '../components/MainHead.astro';

import Navigation from '../components/layout/Navigation.astro';
import Footer from '../components/layout/Footer.astro';
import { url } from 'inspector';
import { getBase64ImageUrl, getCustomQualityUrl } from '../utils/cloudinary';

const { photo } = Astro.props;

// if the page is markdown, use the content title instead of the provided props
const pageTitle = photo.data.title;
const pageDescription = photo.data.location;

const ogImageURL = `${Astro.url.origin}/og?title=${pageTitle}&desc=${pageDescription}&type=Page`;
const encodedOgImageURL = encodeURI(ogImageURL);
---

<html class="" lang="en">
  <head>
    <MainHead title={pageTitle} description={pageDescription} />

    <!-- OG Image Stuff -->
    <meta property="og:title" content={`${pageTitle} | mykal.codes`} />
    <meta property="og:description" content={pageDescription} />
    <meta property="og:url" content="https://mykal.codes" />
    <meta property="og:image" content={encodedOgImageURL} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />

    <!-- Twitter specific OG -->
    <meta name="twitter:card" content="summary_large_image" />
  </head>

  <body class="site-container">
    <Navigation />
    <main class="container" data-pagefind-body>
      <h1>{photo.data.title}</h1>
      <p>Location of these photos: {photo.data.location}</p>
      {
        photo.data.photos.map(async ({ url, alt }) => {
          const lqImage = getCustomQualityUrl(url, 24);
          const b64image = await getBase64ImageUrl(lqImage);
          const hqImage = getCustomQualityUrl(url, 600);
          return (
            <div class="lazy-wrapper"> 
              <img class="lazy loading" src={b64image} alt={alt} data-lazy={hqImage} />
            </div>
          );
        })
      }
      <slot />
    </main>
    <Footer />
  </body>
</html>
