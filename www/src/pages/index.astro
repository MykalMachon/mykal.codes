---
// Layout Import
import HomeLayout from '../layouts/HomeLayout.astro';

// Component Imports
import PostList from '../components/posts/PostList.astro';

// Utility imports
import { getCollection } from 'astro:content';
import { getSortedPosts } from '../utils/posts';
import { getBase64ImageUrl, getCustomQualityUrl } from '../utils/cloudinary';
import Footer from '../components/layout/Footer.astro';
import MainLayout from '../layouts/MainLayout.astro';

// Data Fetching: fetch blog posts
const posts = await getCollection('posts', ({ data }) => {
  return data.draft === false;
});
const sortedPosts = getSortedPosts(posts).slice(0, 5);

// Data fetching: fetch notes
const notes = await getCollection('notes', ({ data }) => {
  return data.draft === false;
});

// Data fetching: fetch photos
const photos = await getCollection('photos');

// Data fetching: fetch links
const links = await getCollection('links');
---

<MainLayout title="Home" description="Mykal's home page">
  <section class="container--large">
    <article class="hero__content">
      <h1>Hey, I'm Mykal Machon</h1>
      <p class="leading-text">
        I'm a software developer and systems analyst. I share a bunch of stuff
        about my personal life and thoughts on this site.
      </p>
      <p>
        The site is an open work in progress and is available for review on <a
          href="https://github.com/MykalMachon/mykal.codes">GitHub</a
        >.
      </p>
    </article>
  </section>

  <section class="home__layout container--large">
    <div class="content__lists">
      <article class="content__posts">
        <div class="content__header">
          <h3>Posts</h3>
          <p class="leading">Traditional blog posts.</p>
        </div>
        <ul class="content__items content__items--cards-large">
          {
            sortedPosts.map((post) => (
              <li>
                <a href={`/posts/${post.data.slug}`}>{post.data.title}</a>
                <time datetime={post.data.pubDate.toISOString()}>
                  {post.data.pubDate.toDateString()}
                </time>
              </li>
            ))
          }
        </ul>
      </article>
      <article class="content__notes">
        <div class="content__header">
          <h3>Notes</h3>
          <p class="leading">These are rapidly evolving ideas.</p>
        </div>
        <ul class="content__items content__items__list">
          {
            notes.map((note) => (
              <li>
                <a href={`/notes/${note.slug}`}>{note.data.title}</a>
              </li>
            ))
          }
        </ul>
      </article>
      <article class="content__photos">
        <div class="content__header">
          <h3>Photos</h3>
          <p class="leading">
            These are either one-offs or collections of images.
          </p>
        </div>
        <div class="content__items content__items--grid">
          {
            photos.map(async (photo) => {
              const basePhoto = photo.data.photos[0];
              const lqImage = getCustomQualityUrl(basePhoto.url, 24);
              const b64image = await getBase64ImageUrl(lqImage);
              const hqImage = getCustomQualityUrl(basePhoto.url, 500);
              return (
                <div class="photo_preview" data-title={photo.data.title}>
                  <a href={`/photos/${photo.slug}`}>
                    <div class="lazy-wrapper">
                      <img
                        class="lazy loading"
                        src={b64image}
                        alt={photo.data.photos[0].alt}
                        data-lazy={hqImage}
                      />
                    </div>
                  </a>
                </div>
              );
            })
          }
        </div>
      </article>
      <article class="content__media">
        <div class="content__header">
          <h3>Links</h3>
          <p class="leading">things I find interesting.</p>
        </div>
        <ul class="content__items content__items__list">
          {
            links.map((link) => (
              <li>
                <a href={`/links/${link.data.slug}`}>{link.data.title}</a>
              </li>
            ))
          }
        </ul>
      </article>
    </div>
  </section>
</MainLayout>

<style lang="scss">
  .section__header {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;

    a {
      margin: var(--size-6) 0 var(--size-3) 0;
    }

    @media screen and (max-width: 650px) {
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      a {
        margin: 0 0 var(--size-3) 0;
      }
    }
  }

  section {
    padding: var(--size-3) var(--size-5);
  }
  .leading-text {
    font-family: var(--font-lead);
    font-size: var(--font-size-md);
    font-weight: normal;
    line-height: 1.35;
  }
  main {
    width: 100%;
    max-width: 1000px;
  }
  article.hero__content {
    max-width: 80ch;
  }

  .content__lists {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: var(--size-5);
    .leading {
      font-family: var(--font-lead);
    }
    .content__header {
      border-bottom: 1px solid var(--gray-3);
      margin-bottom: var(--size-3);
    }

    @media screen and (max-width: 900px) {
      grid-template-columns: 1fr 1fr;
      > :nth-child(3),
      > :nth-child(4) {
        grid-column: span 2;
      }
    }

    @media screen and (max-width: 600px) {
      grid-template-columns: 1fr;
      > :nth-child(3),
      > :nth-child(4) {
        grid-column: span 1;
      }
    }
  }

  .content__items--grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--size-3);

    @media screen and (max-width: 800px) {
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    }

    .photo_preview {
      position: relative;
      .lazy-wrapper {
        border-radius: var(--radius-2);
      }
      img {
        border-radius: var(--radius-2);
        object-fit: cover;
        aspect-ratio: 1/1;
        width: 100%;
        height: 100%;
      }
      &:after {
        content: attr(data-title);
        font-family: var(--font-body);
        opacity: 0;
        transform: translateY(-8px);
        border-radius: var(--radius-2);
        position: absolute;
        bottom: var(--size-1);
        left: var(--size-2);
        width: 100%;
        height: var(--size-6);
        color: white;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5), 0 0 1em rgba(0, 0, 0, 0.8),
          0 0 0.2em rgba(0, 0, 0, 0.5);
        pointer-events: none;
        transition: all 0.3s var(--ease-elastic-3);
      }
      &:hover {
        &:after {
          transform: translateY(0);
          opacity: 1;
        }
      }
    }
  }
</style>
